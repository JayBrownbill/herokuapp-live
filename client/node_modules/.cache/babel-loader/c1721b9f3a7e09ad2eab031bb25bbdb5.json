{"ast":null,"code":"var _jsxFileName = \"/Users/jbrownz/Desktop/vodo-master/herokuapp-live/client/src/components/VodoLogo.js\";\nimport React from 'react';\nimport posed from 'react-pose';\nimport '../stylesheets/App.css';\nimport falling from '../assets/PlaceHolder.png';\nimport logo from '../assets/../assets/VodoNoStrange.png';\nimport glitchLogo from '../assets/RealmRsz.png';\nconst PosedLogoDrop = posed.div({\n  hidden: {\n    opacity: 0\n  },\n  visible: {\n    opacity: 1,\n    y: 200,\n    transition: {\n      opacity: {\n        ease: 'easeIn',\n        duration: 2000\n      },\n      default: {\n        ease: 'easeOut',\n        duration: 2200\n      }\n    }\n  }\n});\nexport default class VodoIntro extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isVibsible: false\n    };\n    this.state = {\n      isOn: false\n    };\n    this.state = {};\n  }\n\n  IntroduceImage() {\n    setTimeout(() => {\n      this.setState({\n        isVibsible: !this.state.isVibsible\n      });\n      this.setState({\n        isOn: !this.state.isOn\n      });\n    }, 800);\n  }\n\n  GlicthImage() {\n    let tracker = 'vodo';\n    setInterval(() => {\n      let image = document.getElementById('glitchSrc');\n\n      if (tracker === 'vodo') {\n        image.style.backgroundImage = \"url(\".concat(logo, \")\"); // image.style.backgroundColor = \"black\";\n\n        tracker = 'realm'; // console.log('GLiTCH');\n      } else {\n        // image.style.backgroundColor = \"#694873\";\n        image.style.backgroundImage = \"url(\".concat(glitchLogo, \")\");\n        tracker = 'vodo'; // console.log('changeBack');\n      }\n    }, 4);\n  } // GlitchTest() {\n  //     let token = 'base';\n  //     setInterval(() => {\n  //         if (token === 'base') {\n  //             console.log(token);\n  //             token = 'secondary';\n  //             // ?DELAY??\n  //         } else {\n  //             console.log(token);\n  //             token = 'base';\n  //         }\n  //     }, 1000);\n  // }\n\n\n  InitializeGlitch() {\n    if (!this.state.isOn === true) {\n      console.log('glitch state set to true.'); // document.getElementById('VodoLogo').style.backgroundColor = \"#694873\";\n\n      this.GlicthImage();\n    } else {\n      console.log('glitch state set to false.');\n    }\n  }\n\n  componentDidMount() {\n    this.IntroduceImage();\n    this.InitializeGlitch(); // this.GlitchTest();    TESTING GLITCH DISPLAY AND PAUSE DURING SET INTERVAL\n  }\n\n  render() {\n    return React.createElement(PosedLogoDrop, {\n      pose: this.state.isVibsible ? 'visible' : 'hidden',\n      id: \"VodoLogo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: falling,\n      alt: \"logo\",\n      id: \"glitchSrc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/jbrownz/Desktop/vodo-master/herokuapp-live/client/src/components/VodoLogo.js"],"names":["React","posed","falling","logo","glitchLogo","PosedLogoDrop","div","hidden","opacity","visible","y","transition","ease","duration","default","VodoIntro","Component","constructor","state","isVibsible","isOn","IntroduceImage","setTimeout","setState","GlicthImage","tracker","setInterval","image","document","getElementById","style","backgroundImage","InitializeGlitch","console","log","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport posed from 'react-pose'\nimport '../stylesheets/App.css'\n\nimport falling from '../assets/PlaceHolder.png'\n\nimport logo from '../assets/../assets/VodoNoStrange.png'\nimport glitchLogo from '../assets/RealmRsz.png'\n\n\n\n\nconst PosedLogoDrop = posed.div({\n\n    hidden: {\n        opacity: 0\n    },\n\n    visible: {\n        opacity: 1,\n        y: 200,\n\n        transition: {\n            opacity: { ease: 'easeIn', duration: 2000 },\n            default: { ease: 'easeOut', duration: 2200 },\n\n        }\n    },\n\n});\n\nexport default class VodoIntro extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {}\n    }\n\n    state = { isVibsible: false };\n    state = { isOn: false };\n\n\n\n    IntroduceImage() {\n        setTimeout(() => {\n            this.setState({ isVibsible: !this.state.isVibsible });\n            this.setState({ isOn: !this.state.isOn });\n\n        }, 800);\n    }\n\n\n    GlicthImage() {\n        let tracker = 'vodo';\n\n        setInterval(() => {\n            let image = document.getElementById('glitchSrc');\n            if (tracker === 'vodo') {\n                image.style.backgroundImage = `url(${logo})`;\n                // image.style.backgroundColor = \"black\";\n                tracker = 'realm';\n                // console.log('GLiTCH');\n\n            } else {\n                // image.style.backgroundColor = \"#694873\";\n                image.style.backgroundImage = `url(${glitchLogo})`;\n                tracker = 'vodo';\n                // console.log('changeBack');\n            }\n        }, 4\n        );\n    }\n\n\n    // GlitchTest() {\n    //     let token = 'base';\n    //     setInterval(() => {\n    //         if (token === 'base') {\n    //             console.log(token);\n    //             token = 'secondary';\n    //             // ?DELAY??\n    //         } else {\n    //             console.log(token);\n    //             token = 'base';\n    //         }\n    //     }, 1000);\n    // }\n\n\n    InitializeGlitch() {\n        if (!this.state.isOn === true) {\n            console.log('glitch state set to true.');\n            // document.getElementById('VodoLogo').style.backgroundColor = \"#694873\";\n            this.GlicthImage();\n        }\n        else {\n            console.log('glitch state set to false.');\n        }\n    }\n\n\n    componentDidMount() {\n        this.IntroduceImage();\n        this.InitializeGlitch();\n        // this.GlitchTest();    TESTING GLITCH DISPLAY AND PAUSE DURING SET INTERVAL\n\n    }\n\n\n\n\n    render() {\n        return (\n            <   PosedLogoDrop\n                pose={this.state.isVibsible ? 'visible' : 'hidden'}\n                id=\"VodoLogo\">\n                <img src={falling} \n                alt=\"logo\" \n                id=\"glitchSrc\"/>\n            </  PosedLogoDrop>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}